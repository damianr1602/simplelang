// Code generated from simplerlang.g4 by ANTLR 4.7.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 27, 194,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 3, 2, 3,
	2, 3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 7, 3, 7, 3, 8, 3,
	8, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3,
	10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10,
	3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 12, 3,
	12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12,
	3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3,
	13, 3, 14, 6, 14, 124, 10, 14, 13, 14, 14, 14, 125, 3, 15, 3, 15, 3, 15,
	7, 15, 131, 10, 15, 12, 15, 14, 15, 134, 11, 15, 3, 15, 3, 15, 3, 16, 3,
	16, 3, 16, 3, 16, 5, 16, 142, 10, 16, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17,
	3, 17, 3, 18, 3, 18, 3, 18, 3, 18, 3, 18, 3, 18, 3, 18, 3, 19, 6, 19, 158,
	10, 19, 13, 19, 14, 19, 159, 3, 20, 6, 20, 163, 10, 20, 13, 20, 14, 20,
	164, 3, 20, 3, 20, 6, 20, 169, 10, 20, 13, 20, 14, 20, 170, 3, 21, 3, 21,
	3, 22, 3, 22, 3, 23, 3, 23, 3, 24, 3, 24, 3, 25, 3, 25, 3, 26, 5, 26, 184,
	10, 26, 3, 26, 3, 26, 3, 27, 6, 27, 189, 10, 27, 13, 27, 14, 27, 190, 3,
	27, 3, 27, 2, 2, 28, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10,
	19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 2, 33, 17, 35, 18,
	37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27,
	3, 2, 5, 4, 2, 67, 92, 99, 124, 6, 2, 12, 12, 15, 15, 36, 36, 94, 94, 4,
	2, 11, 12, 34, 34, 2, 201, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3,
	2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15,
	3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2,
	23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2,
	2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2,
	2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2,
	2, 2, 2, 49, 3, 2, 2, 2, 2, 51, 3, 2, 2, 2, 2, 53, 3, 2, 2, 2, 3, 55, 3,
	2, 2, 2, 5, 57, 3, 2, 2, 2, 7, 59, 3, 2, 2, 2, 9, 61, 3, 2, 2, 2, 11, 63,
	3, 2, 2, 2, 13, 65, 3, 2, 2, 2, 15, 67, 3, 2, 2, 2, 17, 69, 3, 2, 2, 2,
	19, 74, 3, 2, 2, 2, 21, 90, 3, 2, 2, 2, 23, 99, 3, 2, 2, 2, 25, 111, 3,
	2, 2, 2, 27, 123, 3, 2, 2, 2, 29, 127, 3, 2, 2, 2, 31, 141, 3, 2, 2, 2,
	33, 143, 3, 2, 2, 2, 35, 149, 3, 2, 2, 2, 37, 157, 3, 2, 2, 2, 39, 162,
	3, 2, 2, 2, 41, 172, 3, 2, 2, 2, 43, 174, 3, 2, 2, 2, 45, 176, 3, 2, 2,
	2, 47, 178, 3, 2, 2, 2, 49, 180, 3, 2, 2, 2, 51, 183, 3, 2, 2, 2, 53, 188,
	3, 2, 2, 2, 55, 56, 7, 93, 2, 2, 56, 4, 3, 2, 2, 2, 57, 58, 7, 95, 2, 2,
	58, 6, 3, 2, 2, 2, 59, 60, 7, 125, 2, 2, 60, 8, 3, 2, 2, 2, 61, 62, 7,
	127, 2, 2, 62, 10, 3, 2, 2, 2, 63, 64, 7, 42, 2, 2, 64, 12, 3, 2, 2, 2,
	65, 66, 7, 43, 2, 2, 66, 14, 3, 2, 2, 2, 67, 68, 7, 46, 2, 2, 68, 16, 3,
	2, 2, 2, 69, 70, 7, 117, 2, 2, 70, 71, 7, 106, 2, 2, 71, 72, 7, 113, 2,
	2, 72, 73, 7, 121, 2, 2, 73, 18, 3, 2, 2, 2, 74, 75, 7, 117, 2, 2, 75,
	76, 7, 106, 2, 2, 76, 77, 7, 113, 2, 2, 77, 78, 7, 121, 2, 2, 78, 79, 7,
	97, 2, 2, 79, 80, 7, 99, 2, 2, 80, 81, 7, 116, 2, 2, 81, 82, 7, 116, 2,
	2, 82, 83, 7, 99, 2, 2, 83, 84, 7, 123, 2, 2, 84, 85, 7, 97, 2, 2, 85,
	86, 7, 103, 2, 2, 86, 87, 7, 110, 2, 2, 87, 88, 7, 103, 2, 2, 88, 89, 7,
	111, 2, 2, 89, 20, 3, 2, 2, 2, 90, 91, 7, 116, 2, 2, 91, 92, 7, 103, 2,
	2, 92, 93, 7, 99, 2, 2, 93, 94, 7, 102, 2, 2, 94, 95, 7, 97, 2, 2, 95,
	96, 7, 107, 2, 2, 96, 97, 7, 112, 2, 2, 97, 98, 7, 118, 2, 2, 98, 22, 3,
	2, 2, 2, 99, 100, 7, 116, 2, 2, 100, 101, 7, 103, 2, 2, 101, 102, 7, 99,
	2, 2, 102, 103, 7, 102, 2, 2, 103, 104, 7, 97, 2, 2, 104, 105, 7, 102,
	2, 2, 105, 106, 7, 113, 2, 2, 106, 107, 7, 119, 2, 2, 107, 108, 7, 100,
	2, 2, 108, 109, 7, 110, 2, 2, 109, 110, 7, 103, 2, 2, 110, 24, 3, 2, 2,
	2, 111, 112, 7, 116, 2, 2, 112, 113, 7, 103, 2, 2, 113, 114, 7, 99, 2,
	2, 114, 115, 7, 102, 2, 2, 115, 116, 7, 97, 2, 2, 116, 117, 7, 99, 2, 2,
	117, 118, 7, 116, 2, 2, 118, 119, 7, 116, 2, 2, 119, 120, 7, 99, 2, 2,
	120, 121, 7, 123, 2, 2, 121, 26, 3, 2, 2, 2, 122, 124, 9, 2, 2, 2, 123,
	122, 3, 2, 2, 2, 124, 125, 3, 2, 2, 2, 125, 123, 3, 2, 2, 2, 125, 126,
	3, 2, 2, 2, 126, 28, 3, 2, 2, 2, 127, 132, 7, 36, 2, 2, 128, 131, 5, 31,
	16, 2, 129, 131, 10, 3, 2, 2, 130, 128, 3, 2, 2, 2, 130, 129, 3, 2, 2,
	2, 131, 134, 3, 2, 2, 2, 132, 130, 3, 2, 2, 2, 132, 133, 3, 2, 2, 2, 133,
	135, 3, 2, 2, 2, 134, 132, 3, 2, 2, 2, 135, 136, 7, 36, 2, 2, 136, 30,
	3, 2, 2, 2, 137, 138, 7, 94, 2, 2, 138, 142, 7, 36, 2, 2, 139, 140, 7,
	94, 2, 2, 140, 142, 7, 94, 2, 2, 141, 137, 3, 2, 2, 2, 141, 139, 3, 2,
	2, 2, 142, 32, 3, 2, 2, 2, 143, 144, 7, 42, 2, 2, 144, 145, 7, 107, 2,
	2, 145, 146, 7, 112, 2, 2, 146, 147, 7, 118, 2, 2, 147, 148, 7, 43, 2,
	2, 148, 34, 3, 2, 2, 2, 149, 150, 7, 42, 2, 2, 150, 151, 7, 116, 2, 2,
	151, 152, 7, 103, 2, 2, 152, 153, 7, 99, 2, 2, 153, 154, 7, 110, 2, 2,
	154, 155, 7, 43, 2, 2, 155, 36, 3, 2, 2, 2, 156, 158, 4, 50, 59, 2, 157,
	156, 3, 2, 2, 2, 158, 159, 3, 2, 2, 2, 159, 157, 3, 2, 2, 2, 159, 160,
	3, 2, 2, 2, 160, 38, 3, 2, 2, 2, 161, 163, 4, 50, 59, 2, 162, 161, 3, 2,
	2, 2, 163, 164, 3, 2, 2, 2, 164, 162, 3, 2, 2, 2, 164, 165, 3, 2, 2, 2,
	165, 166, 3, 2, 2, 2, 166, 168, 7, 48, 2, 2, 167, 169, 4, 50, 59, 2, 168,
	167, 3, 2, 2, 2, 169, 170, 3, 2, 2, 2, 170, 168, 3, 2, 2, 2, 170, 171,
	3, 2, 2, 2, 171, 40, 3, 2, 2, 2, 172, 173, 7, 63, 2, 2, 173, 42, 3, 2,
	2, 2, 174, 175, 7, 45, 2, 2, 175, 44, 3, 2, 2, 2, 176, 177, 7, 44, 2, 2,
	177, 46, 3, 2, 2, 2, 178, 179, 7, 47, 2, 2, 179, 48, 3, 2, 2, 2, 180, 181,
	7, 49, 2, 2, 181, 50, 3, 2, 2, 2, 182, 184, 7, 15, 2, 2, 183, 182, 3, 2,
	2, 2, 183, 184, 3, 2, 2, 2, 184, 185, 3, 2, 2, 2, 185, 186, 7, 12, 2, 2,
	186, 52, 3, 2, 2, 2, 187, 189, 9, 4, 2, 2, 188, 187, 3, 2, 2, 2, 189, 190,
	3, 2, 2, 2, 190, 188, 3, 2, 2, 2, 190, 191, 3, 2, 2, 2, 191, 192, 3, 2,
	2, 2, 192, 193, 8, 27, 2, 2, 193, 54, 3, 2, 2, 2, 12, 2, 125, 130, 132,
	141, 159, 164, 170, 183, 190, 3, 8, 2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'['", "']'", "'{'", "'}'", "'('", "')'", "','", "'show'", "'show_array_elem'",
	"'read_int'", "'read_double'", "'read_array'", "", "", "'(int)'", "'(real)'",
	"", "", "'='", "'+'", "'*'", "'-'", "'/'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "SHOW", "SHOWARRAYELEM", "READINT", "READDOUBLE",
	"READARRAY", "ID", "STRING", "TOINT", "TOREAL", "INT", "REAL", "ASSIGN",
	"ADD", "MUL", "SUB", "DIV", "NEWLINE", "WS",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "SHOW", "SHOWARRAYELEM",
	"READINT", "READDOUBLE", "READARRAY", "ID", "STRING", "ESC", "TOINT", "TOREAL",
	"INT", "REAL", "ASSIGN", "ADD", "MUL", "SUB", "DIV", "NEWLINE", "WS",
}

type simplerlangLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewsimplerlangLexer(input antlr.CharStream) *simplerlangLexer {

	l := new(simplerlangLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "simplerlang.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// simplerlangLexer tokens.
const (
	simplerlangLexerT__0          = 1
	simplerlangLexerT__1          = 2
	simplerlangLexerT__2          = 3
	simplerlangLexerT__3          = 4
	simplerlangLexerT__4          = 5
	simplerlangLexerT__5          = 6
	simplerlangLexerT__6          = 7
	simplerlangLexerSHOW          = 8
	simplerlangLexerSHOWARRAYELEM = 9
	simplerlangLexerREADINT       = 10
	simplerlangLexerREADDOUBLE    = 11
	simplerlangLexerREADARRAY     = 12
	simplerlangLexerID            = 13
	simplerlangLexerSTRING        = 14
	simplerlangLexerTOINT         = 15
	simplerlangLexerTOREAL        = 16
	simplerlangLexerINT           = 17
	simplerlangLexerREAL          = 18
	simplerlangLexerASSIGN        = 19
	simplerlangLexerADD           = 20
	simplerlangLexerMUL           = 21
	simplerlangLexerSUB           = 22
	simplerlangLexerDIV           = 23
	simplerlangLexerNEWLINE       = 24
	simplerlangLexerWS            = 25
)
