// Code generated from simplelang.g4 by ANTLR 4.8. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 36, 266,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 3, 2, 3, 2, 3, 3, 3, 3, 3, 4,
	3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 7, 3, 7,
	3, 8, 3, 8, 3, 9, 3, 9, 3, 9, 3, 10, 3, 10, 3, 11, 3, 11, 3, 11, 3, 11,
	3, 11, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 13, 3,
	13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14,
	3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 15, 3, 15, 3, 15, 3, 16, 3, 16, 3,
	16, 3, 16, 3, 16, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 18, 3, 18,
	3, 18, 3, 18, 3, 18, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3,
	19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 20, 3, 20,
	3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 21, 3, 21, 3, 21, 3,
	21, 3, 21, 3, 21, 3, 21, 3, 21, 3, 21, 3, 21, 3, 21, 3, 21, 3, 22, 3, 22,
	3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 23, 6,
	23, 196, 10, 23, 13, 23, 14, 23, 197, 3, 24, 3, 24, 3, 24, 7, 24, 203,
	10, 24, 12, 24, 14, 24, 206, 11, 24, 3, 24, 3, 24, 3, 25, 3, 25, 3, 25,
	3, 25, 5, 25, 214, 10, 25, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3,
	27, 3, 27, 3, 27, 3, 27, 3, 27, 3, 27, 3, 27, 3, 28, 6, 28, 230, 10, 28,
	13, 28, 14, 28, 231, 3, 29, 6, 29, 235, 10, 29, 13, 29, 14, 29, 236, 3,
	29, 3, 29, 6, 29, 241, 10, 29, 13, 29, 14, 29, 242, 3, 30, 3, 30, 3, 31,
	3, 31, 3, 32, 3, 32, 3, 33, 3, 33, 3, 34, 3, 34, 3, 35, 5, 35, 256, 10,
	35, 3, 35, 3, 35, 3, 36, 6, 36, 261, 10, 36, 13, 36, 14, 36, 262, 3, 36,
	3, 36, 2, 2, 37, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19,
	11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17, 33, 18, 35, 19, 37,
	20, 39, 21, 41, 22, 43, 23, 45, 24, 47, 25, 49, 2, 51, 26, 53, 27, 55,
	28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33, 67, 34, 69, 35, 71, 36, 3,
	2, 5, 4, 2, 67, 92, 99, 124, 6, 2, 12, 12, 15, 15, 36, 36, 94, 94, 4, 2,
	11, 11, 34, 34, 2, 273, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2,
	2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3,
	2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23,
	3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2,
	31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2,
	2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2, 45, 3, 2, 2,
	2, 2, 47, 3, 2, 2, 2, 2, 51, 3, 2, 2, 2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2,
	2, 2, 2, 57, 3, 2, 2, 2, 2, 59, 3, 2, 2, 2, 2, 61, 3, 2, 2, 2, 2, 63, 3,
	2, 2, 2, 2, 65, 3, 2, 2, 2, 2, 67, 3, 2, 2, 2, 2, 69, 3, 2, 2, 2, 2, 71,
	3, 2, 2, 2, 3, 73, 3, 2, 2, 2, 5, 75, 3, 2, 2, 2, 7, 77, 3, 2, 2, 2, 9,
	79, 3, 2, 2, 2, 11, 81, 3, 2, 2, 2, 13, 88, 3, 2, 2, 2, 15, 90, 3, 2, 2,
	2, 17, 92, 3, 2, 2, 2, 19, 95, 3, 2, 2, 2, 21, 97, 3, 2, 2, 2, 23, 102,
	3, 2, 2, 2, 25, 110, 3, 2, 2, 2, 27, 117, 3, 2, 2, 2, 29, 127, 3, 2, 2,
	2, 31, 130, 3, 2, 2, 2, 33, 135, 3, 2, 2, 2, 35, 141, 3, 2, 2, 2, 37, 146,
	3, 2, 2, 2, 39, 162, 3, 2, 2, 2, 41, 171, 3, 2, 2, 2, 43, 183, 3, 2, 2,
	2, 45, 195, 3, 2, 2, 2, 47, 199, 3, 2, 2, 2, 49, 213, 3, 2, 2, 2, 51, 215,
	3, 2, 2, 2, 53, 221, 3, 2, 2, 2, 55, 229, 3, 2, 2, 2, 57, 234, 3, 2, 2,
	2, 59, 244, 3, 2, 2, 2, 61, 246, 3, 2, 2, 2, 63, 248, 3, 2, 2, 2, 65, 250,
	3, 2, 2, 2, 67, 252, 3, 2, 2, 2, 69, 255, 3, 2, 2, 2, 71, 260, 3, 2, 2,
	2, 73, 74, 7, 93, 2, 2, 74, 4, 3, 2, 2, 2, 75, 76, 7, 95, 2, 2, 76, 6,
	3, 2, 2, 2, 77, 78, 7, 125, 2, 2, 78, 8, 3, 2, 2, 2, 79, 80, 7, 127, 2,
	2, 80, 10, 3, 2, 2, 2, 81, 82, 7, 116, 2, 2, 82, 83, 7, 103, 2, 2, 83,
	84, 7, 118, 2, 2, 84, 85, 7, 119, 2, 2, 85, 86, 7, 116, 2, 2, 86, 87, 7,
	112, 2, 2, 87, 12, 3, 2, 2, 2, 88, 89, 7, 42, 2, 2, 89, 14, 3, 2, 2, 2,
	90, 91, 7, 43, 2, 2, 91, 16, 3, 2, 2, 2, 92, 93, 7, 63, 2, 2, 93, 94, 7,
	63, 2, 2, 94, 18, 3, 2, 2, 2, 95, 96, 7, 46, 2, 2, 96, 20, 3, 2, 2, 2,
	97, 98, 7, 104, 2, 2, 98, 99, 7, 119, 2, 2, 99, 100, 7, 112, 2, 2, 100,
	101, 7, 101, 2, 2, 101, 22, 3, 2, 2, 2, 102, 103, 7, 103, 2, 2, 103, 104,
	7, 112, 2, 2, 104, 105, 7, 102, 2, 2, 105, 106, 7, 104, 2, 2, 106, 107,
	7, 119, 2, 2, 107, 108, 7, 112, 2, 2, 108, 109, 7, 101, 2, 2, 109, 24,
	3, 2, 2, 2, 110, 111, 7, 116, 2, 2, 111, 112, 7, 103, 2, 2, 112, 113, 7,
	114, 2, 2, 113, 114, 7, 103, 2, 2, 114, 115, 7, 99, 2, 2, 115, 116, 7,
	118, 2, 2, 116, 26, 3, 2, 2, 2, 117, 118, 7, 103, 2, 2, 118, 119, 7, 112,
	2, 2, 119, 120, 7, 102, 2, 2, 120, 121, 7, 116, 2, 2, 121, 122, 7, 103,
	2, 2, 122, 123, 7, 114, 2, 2, 123, 124, 7, 103, 2, 2, 124, 125, 7, 99,
	2, 2, 125, 126, 7, 118, 2, 2, 126, 28, 3, 2, 2, 2, 127, 128, 7, 107, 2,
	2, 128, 129, 7, 104, 2, 2, 129, 30, 3, 2, 2, 2, 130, 131, 7, 118, 2, 2,
	131, 132, 7, 106, 2, 2, 132, 133, 7, 103, 2, 2, 133, 134, 7, 112, 2, 2,
	134, 32, 3, 2, 2, 2, 135, 136, 7, 103, 2, 2, 136, 137, 7, 112, 2, 2, 137,
	138, 7, 102, 2, 2, 138, 139, 7, 107, 2, 2, 139, 140, 7, 104, 2, 2, 140,
	34, 3, 2, 2, 2, 141, 142, 7, 117, 2, 2, 142, 143, 7, 106, 2, 2, 143, 144,
	7, 113, 2, 2, 144, 145, 7, 121, 2, 2, 145, 36, 3, 2, 2, 2, 146, 147, 7,
	117, 2, 2, 147, 148, 7, 106, 2, 2, 148, 149, 7, 113, 2, 2, 149, 150, 7,
	121, 2, 2, 150, 151, 7, 97, 2, 2, 151, 152, 7, 99, 2, 2, 152, 153, 7, 116,
	2, 2, 153, 154, 7, 116, 2, 2, 154, 155, 7, 99, 2, 2, 155, 156, 7, 123,
	2, 2, 156, 157, 7, 97, 2, 2, 157, 158, 7, 103, 2, 2, 158, 159, 7, 110,
	2, 2, 159, 160, 7, 103, 2, 2, 160, 161, 7, 111, 2, 2, 161, 38, 3, 2, 2,
	2, 162, 163, 7, 116, 2, 2, 163, 164, 7, 103, 2, 2, 164, 165, 7, 99, 2,
	2, 165, 166, 7, 102, 2, 2, 166, 167, 7, 97, 2, 2, 167, 168, 7, 107, 2,
	2, 168, 169, 7, 112, 2, 2, 169, 170, 7, 118, 2, 2, 170, 40, 3, 2, 2, 2,
	171, 172, 7, 116, 2, 2, 172, 173, 7, 103, 2, 2, 173, 174, 7, 99, 2, 2,
	174, 175, 7, 102, 2, 2, 175, 176, 7, 97, 2, 2, 176, 177, 7, 102, 2, 2,
	177, 178, 7, 113, 2, 2, 178, 179, 7, 119, 2, 2, 179, 180, 7, 100, 2, 2,
	180, 181, 7, 110, 2, 2, 181, 182, 7, 103, 2, 2, 182, 42, 3, 2, 2, 2, 183,
	184, 7, 116, 2, 2, 184, 185, 7, 103, 2, 2, 185, 186, 7, 99, 2, 2, 186,
	187, 7, 102, 2, 2, 187, 188, 7, 97, 2, 2, 188, 189, 7, 99, 2, 2, 189, 190,
	7, 116, 2, 2, 190, 191, 7, 116, 2, 2, 191, 192, 7, 99, 2, 2, 192, 193,
	7, 123, 2, 2, 193, 44, 3, 2, 2, 2, 194, 196, 9, 2, 2, 2, 195, 194, 3, 2,
	2, 2, 196, 197, 3, 2, 2, 2, 197, 195, 3, 2, 2, 2, 197, 198, 3, 2, 2, 2,
	198, 46, 3, 2, 2, 2, 199, 204, 7, 36, 2, 2, 200, 203, 5, 49, 25, 2, 201,
	203, 10, 3, 2, 2, 202, 200, 3, 2, 2, 2, 202, 201, 3, 2, 2, 2, 203, 206,
	3, 2, 2, 2, 204, 202, 3, 2, 2, 2, 204, 205, 3, 2, 2, 2, 205, 207, 3, 2,
	2, 2, 206, 204, 3, 2, 2, 2, 207, 208, 7, 36, 2, 2, 208, 48, 3, 2, 2, 2,
	209, 210, 7, 94, 2, 2, 210, 214, 7, 36, 2, 2, 211, 212, 7, 94, 2, 2, 212,
	214, 7, 94, 2, 2, 213, 209, 3, 2, 2, 2, 213, 211, 3, 2, 2, 2, 214, 50,
	3, 2, 2, 2, 215, 216, 7, 42, 2, 2, 216, 217, 7, 107, 2, 2, 217, 218, 7,
	112, 2, 2, 218, 219, 7, 118, 2, 2, 219, 220, 7, 43, 2, 2, 220, 52, 3, 2,
	2, 2, 221, 222, 7, 42, 2, 2, 222, 223, 7, 116, 2, 2, 223, 224, 7, 103,
	2, 2, 224, 225, 7, 99, 2, 2, 225, 226, 7, 110, 2, 2, 226, 227, 7, 43, 2,
	2, 227, 54, 3, 2, 2, 2, 228, 230, 4, 50, 59, 2, 229, 228, 3, 2, 2, 2, 230,
	231, 3, 2, 2, 2, 231, 229, 3, 2, 2, 2, 231, 232, 3, 2, 2, 2, 232, 56, 3,
	2, 2, 2, 233, 235, 4, 50, 59, 2, 234, 233, 3, 2, 2, 2, 235, 236, 3, 2,
	2, 2, 236, 234, 3, 2, 2, 2, 236, 237, 3, 2, 2, 2, 237, 238, 3, 2, 2, 2,
	238, 240, 7, 48, 2, 2, 239, 241, 4, 50, 59, 2, 240, 239, 3, 2, 2, 2, 241,
	242, 3, 2, 2, 2, 242, 240, 3, 2, 2, 2, 242, 243, 3, 2, 2, 2, 243, 58, 3,
	2, 2, 2, 244, 245, 7, 63, 2, 2, 245, 60, 3, 2, 2, 2, 246, 247, 7, 45, 2,
	2, 247, 62, 3, 2, 2, 2, 248, 249, 7, 44, 2, 2, 249, 64, 3, 2, 2, 2, 250,
	251, 7, 47, 2, 2, 251, 66, 3, 2, 2, 2, 252, 253, 7, 49, 2, 2, 253, 68,
	3, 2, 2, 2, 254, 256, 7, 15, 2, 2, 255, 254, 3, 2, 2, 2, 255, 256, 3, 2,
	2, 2, 256, 257, 3, 2, 2, 2, 257, 258, 7, 12, 2, 2, 258, 70, 3, 2, 2, 2,
	259, 261, 9, 4, 2, 2, 260, 259, 3, 2, 2, 2, 261, 262, 3, 2, 2, 2, 262,
	260, 3, 2, 2, 2, 262, 263, 3, 2, 2, 2, 263, 264, 3, 2, 2, 2, 264, 265,
	8, 36, 2, 2, 265, 72, 3, 2, 2, 2, 12, 2, 197, 202, 204, 213, 231, 236,
	242, 255, 262, 3, 8, 2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'['", "']'", "'{'", "'}'", "'return'", "'('", "')'", "'=='", "','",
	"'func'", "'endfunc'", "'repeat'", "'endrepeat'", "'if'", "'then'", "'endif'",
	"'show'", "'show_array_elem'", "'read_int'", "'read_double'", "'read_array'",
	"", "", "'(int)'", "'(real)'", "", "", "'='", "'+'", "'*'", "'-'", "'/'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "", "", "FUNC", "ENDFUNC", "REPEAT", "ENDREPEAT",
	"IF", "THEN", "ENDIF", "SHOW", "SHOWARRAYELEM", "READINT", "READDOUBLE",
	"READARRAY", "ID", "STRING", "TOINT", "TOREAL", "INT", "REAL", "ASSIGN",
	"ADD", "MUL", "SUB", "DIV", "NEWLINE", "WS",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
	"FUNC", "ENDFUNC", "REPEAT", "ENDREPEAT", "IF", "THEN", "ENDIF", "SHOW",
	"SHOWARRAYELEM", "READINT", "READDOUBLE", "READARRAY", "ID", "STRING",
	"ESC", "TOINT", "TOREAL", "INT", "REAL", "ASSIGN", "ADD", "MUL", "SUB",
	"DIV", "NEWLINE", "WS",
}

type simplelangLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewsimplelangLexer(input antlr.CharStream) *simplelangLexer {

	l := new(simplelangLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "simplelang.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// simplelangLexer tokens.
const (
	simplelangLexerT__0          = 1
	simplelangLexerT__1          = 2
	simplelangLexerT__2          = 3
	simplelangLexerT__3          = 4
	simplelangLexerT__4          = 5
	simplelangLexerT__5          = 6
	simplelangLexerT__6          = 7
	simplelangLexerT__7          = 8
	simplelangLexerT__8          = 9
	simplelangLexerFUNC          = 10
	simplelangLexerENDFUNC       = 11
	simplelangLexerREPEAT        = 12
	simplelangLexerENDREPEAT     = 13
	simplelangLexerIF            = 14
	simplelangLexerTHEN          = 15
	simplelangLexerENDIF         = 16
	simplelangLexerSHOW          = 17
	simplelangLexerSHOWARRAYELEM = 18
	simplelangLexerREADINT       = 19
	simplelangLexerREADDOUBLE    = 20
	simplelangLexerREADARRAY     = 21
	simplelangLexerID            = 22
	simplelangLexerSTRING        = 23
	simplelangLexerTOINT         = 24
	simplelangLexerTOREAL        = 25
	simplelangLexerINT           = 26
	simplelangLexerREAL          = 27
	simplelangLexerASSIGN        = 28
	simplelangLexerADD           = 29
	simplelangLexerMUL           = 30
	simplelangLexerSUB           = 31
	simplelangLexerDIV           = 32
	simplelangLexerNEWLINE       = 33
	simplelangLexerWS            = 34
)
