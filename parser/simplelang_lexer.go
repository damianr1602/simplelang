// Code generated from simplelang.g4 by ANTLR 4.8. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 39, 291,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 3, 2, 3, 2, 3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6,
	3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 8, 3, 8, 3, 9, 3, 9, 3, 10,
	3, 10, 3, 10, 3, 11, 3, 11, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3,
	12, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13,
	3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3,
	15, 3, 15, 3, 15, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 17,
	3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 18, 3,
	18, 3, 18, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 20, 3, 20, 3, 20, 3, 20,
	3, 20, 3, 20, 3, 21, 3, 21, 3, 21, 3, 21, 3, 21, 3, 22, 3, 22, 3, 22, 3,
	22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22,
	3, 22, 3, 22, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3,
	23, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24,
	3, 24, 3, 24, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3,
	25, 3, 25, 3, 25, 3, 26, 6, 26, 221, 10, 26, 13, 26, 14, 26, 222, 3, 27,
	3, 27, 3, 27, 7, 27, 228, 10, 27, 12, 27, 14, 27, 231, 11, 27, 3, 27, 3,
	27, 3, 28, 3, 28, 3, 28, 3, 28, 5, 28, 239, 10, 28, 3, 29, 3, 29, 3, 29,
	3, 29, 3, 29, 3, 29, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 3,
	31, 6, 31, 255, 10, 31, 13, 31, 14, 31, 256, 3, 32, 6, 32, 260, 10, 32,
	13, 32, 14, 32, 261, 3, 32, 3, 32, 6, 32, 266, 10, 32, 13, 32, 14, 32,
	267, 3, 33, 3, 33, 3, 34, 3, 34, 3, 35, 3, 35, 3, 36, 3, 36, 3, 37, 3,
	37, 3, 38, 5, 38, 281, 10, 38, 3, 38, 3, 38, 3, 39, 6, 39, 286, 10, 39,
	13, 39, 14, 39, 287, 3, 39, 3, 39, 2, 2, 40, 3, 3, 5, 4, 7, 5, 9, 6, 11,
	7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16,
	31, 17, 33, 18, 35, 19, 37, 20, 39, 21, 41, 22, 43, 23, 45, 24, 47, 25,
	49, 26, 51, 27, 53, 28, 55, 2, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33,
	67, 34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 39, 3, 2, 5, 4, 2, 67, 92,
	99, 124, 6, 2, 12, 12, 15, 15, 36, 36, 94, 94, 4, 2, 11, 11, 34, 34, 2,
	298, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2,
	2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3,
	2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25,
	3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2,
	33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2,
	2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2,
	2, 2, 49, 3, 2, 2, 2, 2, 51, 3, 2, 2, 2, 2, 53, 3, 2, 2, 2, 2, 57, 3, 2,
	2, 2, 2, 59, 3, 2, 2, 2, 2, 61, 3, 2, 2, 2, 2, 63, 3, 2, 2, 2, 2, 65, 3,
	2, 2, 2, 2, 67, 3, 2, 2, 2, 2, 69, 3, 2, 2, 2, 2, 71, 3, 2, 2, 2, 2, 73,
	3, 2, 2, 2, 2, 75, 3, 2, 2, 2, 2, 77, 3, 2, 2, 2, 3, 79, 3, 2, 2, 2, 5,
	81, 3, 2, 2, 2, 7, 83, 3, 2, 2, 2, 9, 85, 3, 2, 2, 2, 11, 87, 3, 2, 2,
	2, 13, 89, 3, 2, 2, 2, 15, 96, 3, 2, 2, 2, 17, 98, 3, 2, 2, 2, 19, 100,
	3, 2, 2, 2, 21, 103, 3, 2, 2, 2, 23, 105, 3, 2, 2, 2, 25, 112, 3, 2, 2,
	2, 27, 122, 3, 2, 2, 2, 29, 127, 3, 2, 2, 2, 31, 135, 3, 2, 2, 2, 33, 142,
	3, 2, 2, 2, 35, 152, 3, 2, 2, 2, 37, 155, 3, 2, 2, 2, 39, 160, 3, 2, 2,
	2, 41, 166, 3, 2, 2, 2, 43, 171, 3, 2, 2, 2, 45, 187, 3, 2, 2, 2, 47, 196,
	3, 2, 2, 2, 49, 208, 3, 2, 2, 2, 51, 220, 3, 2, 2, 2, 53, 224, 3, 2, 2,
	2, 55, 238, 3, 2, 2, 2, 57, 240, 3, 2, 2, 2, 59, 246, 3, 2, 2, 2, 61, 254,
	3, 2, 2, 2, 63, 259, 3, 2, 2, 2, 65, 269, 3, 2, 2, 2, 67, 271, 3, 2, 2,
	2, 69, 273, 3, 2, 2, 2, 71, 275, 3, 2, 2, 2, 73, 277, 3, 2, 2, 2, 75, 280,
	3, 2, 2, 2, 77, 285, 3, 2, 2, 2, 79, 80, 7, 93, 2, 2, 80, 4, 3, 2, 2, 2,
	81, 82, 7, 95, 2, 2, 82, 6, 3, 2, 2, 2, 83, 84, 7, 125, 2, 2, 84, 8, 3,
	2, 2, 2, 85, 86, 7, 127, 2, 2, 86, 10, 3, 2, 2, 2, 87, 88, 7, 61, 2, 2,
	88, 12, 3, 2, 2, 2, 89, 90, 7, 116, 2, 2, 90, 91, 7, 103, 2, 2, 91, 92,
	7, 118, 2, 2, 92, 93, 7, 119, 2, 2, 93, 94, 7, 116, 2, 2, 94, 95, 7, 112,
	2, 2, 95, 14, 3, 2, 2, 2, 96, 97, 7, 42, 2, 2, 97, 16, 3, 2, 2, 2, 98,
	99, 7, 43, 2, 2, 99, 18, 3, 2, 2, 2, 100, 101, 7, 63, 2, 2, 101, 102, 7,
	63, 2, 2, 102, 20, 3, 2, 2, 2, 103, 104, 7, 46, 2, 2, 104, 22, 3, 2, 2,
	2, 105, 106, 7, 117, 2, 2, 106, 107, 7, 118, 2, 2, 107, 108, 7, 116, 2,
	2, 108, 109, 7, 119, 2, 2, 109, 110, 7, 101, 2, 2, 110, 111, 7, 118, 2,
	2, 111, 24, 3, 2, 2, 2, 112, 113, 7, 103, 2, 2, 113, 114, 7, 112, 2, 2,
	114, 115, 7, 102, 2, 2, 115, 116, 7, 117, 2, 2, 116, 117, 7, 118, 2, 2,
	117, 118, 7, 116, 2, 2, 118, 119, 7, 119, 2, 2, 119, 120, 7, 101, 2, 2,
	120, 121, 7, 118, 2, 2, 121, 26, 3, 2, 2, 2, 122, 123, 7, 104, 2, 2, 123,
	124, 7, 119, 2, 2, 124, 125, 7, 112, 2, 2, 125, 126, 7, 101, 2, 2, 126,
	28, 3, 2, 2, 2, 127, 128, 7, 103, 2, 2, 128, 129, 7, 112, 2, 2, 129, 130,
	7, 102, 2, 2, 130, 131, 7, 104, 2, 2, 131, 132, 7, 119, 2, 2, 132, 133,
	7, 112, 2, 2, 133, 134, 7, 101, 2, 2, 134, 30, 3, 2, 2, 2, 135, 136, 7,
	116, 2, 2, 136, 137, 7, 103, 2, 2, 137, 138, 7, 114, 2, 2, 138, 139, 7,
	103, 2, 2, 139, 140, 7, 99, 2, 2, 140, 141, 7, 118, 2, 2, 141, 32, 3, 2,
	2, 2, 142, 143, 7, 103, 2, 2, 143, 144, 7, 112, 2, 2, 144, 145, 7, 102,
	2, 2, 145, 146, 7, 116, 2, 2, 146, 147, 7, 103, 2, 2, 147, 148, 7, 114,
	2, 2, 148, 149, 7, 103, 2, 2, 149, 150, 7, 99, 2, 2, 150, 151, 7, 118,
	2, 2, 151, 34, 3, 2, 2, 2, 152, 153, 7, 107, 2, 2, 153, 154, 7, 104, 2,
	2, 154, 36, 3, 2, 2, 2, 155, 156, 7, 118, 2, 2, 156, 157, 7, 106, 2, 2,
	157, 158, 7, 103, 2, 2, 158, 159, 7, 112, 2, 2, 159, 38, 3, 2, 2, 2, 160,
	161, 7, 103, 2, 2, 161, 162, 7, 112, 2, 2, 162, 163, 7, 102, 2, 2, 163,
	164, 7, 107, 2, 2, 164, 165, 7, 104, 2, 2, 165, 40, 3, 2, 2, 2, 166, 167,
	7, 117, 2, 2, 167, 168, 7, 106, 2, 2, 168, 169, 7, 113, 2, 2, 169, 170,
	7, 121, 2, 2, 170, 42, 3, 2, 2, 2, 171, 172, 7, 117, 2, 2, 172, 173, 7,
	106, 2, 2, 173, 174, 7, 113, 2, 2, 174, 175, 7, 121, 2, 2, 175, 176, 7,
	97, 2, 2, 176, 177, 7, 99, 2, 2, 177, 178, 7, 116, 2, 2, 178, 179, 7, 116,
	2, 2, 179, 180, 7, 99, 2, 2, 180, 181, 7, 123, 2, 2, 181, 182, 7, 97, 2,
	2, 182, 183, 7, 103, 2, 2, 183, 184, 7, 110, 2, 2, 184, 185, 7, 103, 2,
	2, 185, 186, 7, 111, 2, 2, 186, 44, 3, 2, 2, 2, 187, 188, 7, 116, 2, 2,
	188, 189, 7, 103, 2, 2, 189, 190, 7, 99, 2, 2, 190, 191, 7, 102, 2, 2,
	191, 192, 7, 97, 2, 2, 192, 193, 7, 107, 2, 2, 193, 194, 7, 112, 2, 2,
	194, 195, 7, 118, 2, 2, 195, 46, 3, 2, 2, 2, 196, 197, 7, 116, 2, 2, 197,
	198, 7, 103, 2, 2, 198, 199, 7, 99, 2, 2, 199, 200, 7, 102, 2, 2, 200,
	201, 7, 97, 2, 2, 201, 202, 7, 102, 2, 2, 202, 203, 7, 113, 2, 2, 203,
	204, 7, 119, 2, 2, 204, 205, 7, 100, 2, 2, 205, 206, 7, 110, 2, 2, 206,
	207, 7, 103, 2, 2, 207, 48, 3, 2, 2, 2, 208, 209, 7, 116, 2, 2, 209, 210,
	7, 103, 2, 2, 210, 211, 7, 99, 2, 2, 211, 212, 7, 102, 2, 2, 212, 213,
	7, 97, 2, 2, 213, 214, 7, 99, 2, 2, 214, 215, 7, 116, 2, 2, 215, 216, 7,
	116, 2, 2, 216, 217, 7, 99, 2, 2, 217, 218, 7, 123, 2, 2, 218, 50, 3, 2,
	2, 2, 219, 221, 9, 2, 2, 2, 220, 219, 3, 2, 2, 2, 221, 222, 3, 2, 2, 2,
	222, 220, 3, 2, 2, 2, 222, 223, 3, 2, 2, 2, 223, 52, 3, 2, 2, 2, 224, 229,
	7, 36, 2, 2, 225, 228, 5, 55, 28, 2, 226, 228, 10, 3, 2, 2, 227, 225, 3,
	2, 2, 2, 227, 226, 3, 2, 2, 2, 228, 231, 3, 2, 2, 2, 229, 227, 3, 2, 2,
	2, 229, 230, 3, 2, 2, 2, 230, 232, 3, 2, 2, 2, 231, 229, 3, 2, 2, 2, 232,
	233, 7, 36, 2, 2, 233, 54, 3, 2, 2, 2, 234, 235, 7, 94, 2, 2, 235, 239,
	7, 36, 2, 2, 236, 237, 7, 94, 2, 2, 237, 239, 7, 94, 2, 2, 238, 234, 3,
	2, 2, 2, 238, 236, 3, 2, 2, 2, 239, 56, 3, 2, 2, 2, 240, 241, 7, 42, 2,
	2, 241, 242, 7, 107, 2, 2, 242, 243, 7, 112, 2, 2, 243, 244, 7, 118, 2,
	2, 244, 245, 7, 43, 2, 2, 245, 58, 3, 2, 2, 2, 246, 247, 7, 42, 2, 2, 247,
	248, 7, 116, 2, 2, 248, 249, 7, 103, 2, 2, 249, 250, 7, 99, 2, 2, 250,
	251, 7, 110, 2, 2, 251, 252, 7, 43, 2, 2, 252, 60, 3, 2, 2, 2, 253, 255,
	4, 50, 59, 2, 254, 253, 3, 2, 2, 2, 255, 256, 3, 2, 2, 2, 256, 254, 3,
	2, 2, 2, 256, 257, 3, 2, 2, 2, 257, 62, 3, 2, 2, 2, 258, 260, 4, 50, 59,
	2, 259, 258, 3, 2, 2, 2, 260, 261, 3, 2, 2, 2, 261, 259, 3, 2, 2, 2, 261,
	262, 3, 2, 2, 2, 262, 263, 3, 2, 2, 2, 263, 265, 7, 48, 2, 2, 264, 266,
	4, 50, 59, 2, 265, 264, 3, 2, 2, 2, 266, 267, 3, 2, 2, 2, 267, 265, 3,
	2, 2, 2, 267, 268, 3, 2, 2, 2, 268, 64, 3, 2, 2, 2, 269, 270, 7, 63, 2,
	2, 270, 66, 3, 2, 2, 2, 271, 272, 7, 45, 2, 2, 272, 68, 3, 2, 2, 2, 273,
	274, 7, 44, 2, 2, 274, 70, 3, 2, 2, 2, 275, 276, 7, 47, 2, 2, 276, 72,
	3, 2, 2, 2, 277, 278, 7, 49, 2, 2, 278, 74, 3, 2, 2, 2, 279, 281, 7, 15,
	2, 2, 280, 279, 3, 2, 2, 2, 280, 281, 3, 2, 2, 2, 281, 282, 3, 2, 2, 2,
	282, 283, 7, 12, 2, 2, 283, 76, 3, 2, 2, 2, 284, 286, 9, 4, 2, 2, 285,
	284, 3, 2, 2, 2, 286, 287, 3, 2, 2, 2, 287, 285, 3, 2, 2, 2, 287, 288,
	3, 2, 2, 2, 288, 289, 3, 2, 2, 2, 289, 290, 8, 39, 2, 2, 290, 78, 3, 2,
	2, 2, 12, 2, 222, 227, 229, 238, 256, 261, 267, 280, 287, 3, 8, 2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'['", "']'", "'{'", "'}'", "';'", "'return'", "'('", "')'", "'=='",
	"','", "'struct'", "'endstruct'", "'func'", "'endfunc'", "'repeat'", "'endrepeat'",
	"'if'", "'then'", "'endif'", "'show'", "'show_array_elem'", "'read_int'",
	"'read_double'", "'read_array'", "", "", "'(int)'", "'(real)'", "", "",
	"'='", "'+'", "'*'", "'-'", "'/'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "", "", "", "STRUCT", "ENDSTRUCT", "FUNC",
	"ENDFUNC", "REPEAT", "ENDREPEAT", "IF", "THEN", "ENDIF", "SHOW", "SHOWARRAYELEM",
	"READINT", "READDOUBLE", "READARRAY", "ID", "STRING", "TOINT", "TOREAL",
	"INT", "REAL", "ASSIGN", "ADD", "MUL", "SUB", "DIV", "NEWLINE", "WS",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
	"T__9", "STRUCT", "ENDSTRUCT", "FUNC", "ENDFUNC", "REPEAT", "ENDREPEAT",
	"IF", "THEN", "ENDIF", "SHOW", "SHOWARRAYELEM", "READINT", "READDOUBLE",
	"READARRAY", "ID", "STRING", "ESC", "TOINT", "TOREAL", "INT", "REAL", "ASSIGN",
	"ADD", "MUL", "SUB", "DIV", "NEWLINE", "WS",
}

type simplelangLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewsimplelangLexer(input antlr.CharStream) *simplelangLexer {

	l := new(simplelangLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "simplelang.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// simplelangLexer tokens.
const (
	simplelangLexerT__0          = 1
	simplelangLexerT__1          = 2
	simplelangLexerT__2          = 3
	simplelangLexerT__3          = 4
	simplelangLexerT__4          = 5
	simplelangLexerT__5          = 6
	simplelangLexerT__6          = 7
	simplelangLexerT__7          = 8
	simplelangLexerT__8          = 9
	simplelangLexerT__9          = 10
	simplelangLexerSTRUCT        = 11
	simplelangLexerENDSTRUCT     = 12
	simplelangLexerFUNC          = 13
	simplelangLexerENDFUNC       = 14
	simplelangLexerREPEAT        = 15
	simplelangLexerENDREPEAT     = 16
	simplelangLexerIF            = 17
	simplelangLexerTHEN          = 18
	simplelangLexerENDIF         = 19
	simplelangLexerSHOW          = 20
	simplelangLexerSHOWARRAYELEM = 21
	simplelangLexerREADINT       = 22
	simplelangLexerREADDOUBLE    = 23
	simplelangLexerREADARRAY     = 24
	simplelangLexerID            = 25
	simplelangLexerSTRING        = 26
	simplelangLexerTOINT         = 27
	simplelangLexerTOREAL        = 28
	simplelangLexerINT           = 29
	simplelangLexerREAL          = 30
	simplelangLexerASSIGN        = 31
	simplelangLexerADD           = 32
	simplelangLexerMUL           = 33
	simplelangLexerSUB           = 34
	simplelangLexerDIV           = 35
	simplelangLexerNEWLINE       = 36
	simplelangLexerWS            = 37
)
